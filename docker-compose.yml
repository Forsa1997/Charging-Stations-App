version: "3.9"
services:

  postgresql:
    image: postgres
    environment:
      - POSTGRES_DB=testdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=docker
    ports:
      - 5432:5432
    volumes:
      - ./backend/src/main/resources/data.sql:/docker-entrypoint-initdb.d/initdb.sql

  spring:
    image: kaano29/charging-station-backend
    restart: on-failure
    depends_on:
      - postgresql
    ports:
      - 8080:8080
    environment:
      SPRING_APPLICATION_JSON: '{
            "spring.datasource.url" : "jdbc:postgresql://postgresql:5432/testdb?allowPublicKeyRetrieval=true&useSSL=false",
            "spring.datasource.username" : "postgres",
            "spring.datasource.password" : "docker",
            "spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation": "true",
            "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.PostgreSQLDialect",
            "spring.datasource.driverClassName" : "org.postgresql.Driver",
            "spring.jpa.hibernate.ddl-auto" : "update",
            "charging.app.jwtSecret": "VeryTopSecretKey",
            "charging.app.jwtExpirationMs": "86400000",
            "spring.jpa.show-sql" : "true",
            "spring.jpa.properties.hibernate.format_sql" : "true"
          }'

  react:
    image: kaano29/charging-stations-frontend
    ports: 
      - 3000:3000
    volumes: 
      - ./frontend/src:/app/src
      - ./frontend/public/assets:/app/public/assets
      - /app/node_modules
    stdin_open: true
    command: npm start


  


